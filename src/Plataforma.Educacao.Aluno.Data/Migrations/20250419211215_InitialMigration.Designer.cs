// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Plataforma.Educacao.Aluno.Data.Contexts;

#nullable disable

namespace Plataforma.Educacao.Aluno.Data.Migrations
{
    [DbContext(typeof(AlunoDbContext))]
    [Migration("20250419211215_InitialMigration")]
    partial class InitialMigration
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "8.0.15");

            modelBuilder.Entity("Plataforma.Educacao.Aluno.Domain.Entities.Aluno", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("UniqueIdentifier")
                        .HasColumnName("AlunoId");

                    b.Property<Guid>("CodigoUsuarioAutenticacao")
                        .HasColumnType("UniqueIdentifier")
                        .HasColumnName("CodigoUsuarioAutenticacao");

                    b.Property<DateTime>("DataNascimento")
                        .HasColumnType("SmallDateTime")
                        .HasColumnName("DataNascimento");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("Varchar")
                        .HasColumnName("Email")
                        .UseCollation("Latin1_General_CI_AI");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("Varchar")
                        .HasColumnName("Nome")
                        .UseCollation("Latin1_General_CI_AI");

                    b.HasKey("Id")
                        .HasName("AlunosPK");

                    b.HasIndex("Email")
                        .IsUnique()
                        .HasDatabaseName("AlunosEmailUK");

                    b.HasIndex("Nome")
                        .HasDatabaseName("AlunosNomeIDX");

                    b.ToTable("Alunos", (string)null);
                });

            modelBuilder.Entity("Plataforma.Educacao.Aluno.Domain.Entities.Certificado", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("UniqueIdentifier")
                        .HasColumnName("CertificadoId");

                    b.Property<DateTime>("DataSolicitacao")
                        .HasColumnType("SmallDateTime")
                        .HasColumnName("DataSolicitacao");

                    b.Property<Guid>("MatriculaCursoId")
                        .HasColumnType("UniqueIdentifier")
                        .HasColumnName("MatriculaCursoId");

                    b.Property<string>("PathCertificado")
                        .IsRequired()
                        .HasMaxLength(1024)
                        .HasColumnType("Varchar")
                        .HasColumnName("PathCertificado")
                        .UseCollation("Latin1_General_CI_AI");

                    b.HasKey("Id")
                        .HasName("CertificadosPK");

                    b.HasIndex("MatriculaCursoId")
                        .IsUnique()
                        .HasDatabaseName("CertificadosMatriculaCursoIdIDX");

                    b.ToTable("Certificados", (string)null);
                });

            modelBuilder.Entity("Plataforma.Educacao.Aluno.Domain.Entities.MatriculaCurso", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("UniqueIdentifier")
                        .HasColumnName("MatriculaCursoId");

                    b.Property<Guid>("AlunoId")
                        .HasColumnType("UniqueIdentifier")
                        .HasColumnName("AlunoId");

                    b.Property<Guid>("CursoId")
                        .HasColumnType("UniqueIdentifier")
                        .HasColumnName("CursoId");

                    b.Property<DateTime?>("DataConclusao")
                        .HasColumnType("SmallDateTime")
                        .HasColumnName("DataConclusao");

                    b.Property<DateTime>("DataMatricula")
                        .HasColumnType("SmallDateTime")
                        .HasColumnName("DataMatricula");

                    b.Property<int>("EstadoMatricula")
                        .HasColumnType("TinyInt")
                        .HasColumnName("EstadoMatricula");

                    b.Property<string>("NomeCurso")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("Varchar")
                        .HasColumnName("NomeCurso")
                        .UseCollation("Latin1_General_CI_AI");

                    b.Property<decimal>("Valor")
                        .HasPrecision(10, 2)
                        .HasColumnType("Money")
                        .HasColumnName("Valor");

                    b.HasKey("Id")
                        .HasName("MatriculasCursosPK");

                    b.HasIndex("AlunoId")
                        .HasDatabaseName("MatriculasCursosAlunoIdIDX");

                    b.HasIndex("CursoId")
                        .HasDatabaseName("MatriculasCursosCursoIdIDX");

                    b.ToTable("MatriculasCursos", (string)null);
                });

            modelBuilder.Entity("Plataforma.Educacao.Aluno.Domain.Entities.Certificado", b =>
                {
                    b.HasOne("Plataforma.Educacao.Aluno.Domain.Entities.MatriculaCurso", "MatriculaCurso")
                        .WithOne("Certificado")
                        .HasForeignKey("Plataforma.Educacao.Aluno.Domain.Entities.Certificado", "MatriculaCursoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("MatriculasCursosCertificadosFK");

                    b.Navigation("MatriculaCurso");
                });

            modelBuilder.Entity("Plataforma.Educacao.Aluno.Domain.Entities.MatriculaCurso", b =>
                {
                    b.HasOne("Plataforma.Educacao.Aluno.Domain.Entities.Aluno", "Aluno")
                        .WithMany("MatriculasCursos")
                        .HasForeignKey("AlunoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("MatriculasCursosAlunosFK");

                    b.OwnsMany("Plataforma.Educacao.Aluno.Domain.ValueObjects.HistoricoAprendizado", "HistoricoAprendizado", b1 =>
                        {
                            b1.Property<Guid>("Id")
                                .ValueGeneratedOnAdd()
                                .HasColumnType("UniqueIdentifier")
                                .HasColumnName("HistoricoAprendizadoId");

                            b1.Property<Guid>("AulaId")
                                .HasColumnType("UniqueIdentifier");

                            b1.Property<Guid>("CursoId")
                                .HasColumnType("UniqueIdentifier");

                            b1.Property<DateTime>("DataInicio")
                                .HasColumnType("SmallDateTime");

                            b1.Property<DateTime?>("DataTermino")
                                .HasColumnType("SmallDateTime");

                            b1.Property<Guid>("MatriculaCursoId")
                                .HasColumnType("UniqueIdentifier");

                            b1.Property<string>("NomeAula")
                                .IsRequired()
                                .HasMaxLength(100)
                                .HasColumnType("Varchar");

                            b1.HasKey("Id")
                                .HasName("HistoricoAprendizadoPK");

                            b1.HasIndex("AulaId")
                                .HasDatabaseName("HistoricosAprendizadoAulaIdIDX");

                            b1.HasIndex("CursoId")
                                .HasDatabaseName("HistoricosAprendizadoCursoIdIDX");

                            b1.HasIndex("MatriculaCursoId");

                            b1.ToTable("HistoricosAprendizado", (string)null);

                            b1.WithOwner()
                                .HasForeignKey("MatriculaCursoId");
                        });

                    b.Navigation("Aluno");

                    b.Navigation("HistoricoAprendizado");
                });

            modelBuilder.Entity("Plataforma.Educacao.Aluno.Domain.Entities.Aluno", b =>
                {
                    b.Navigation("MatriculasCursos");
                });

            modelBuilder.Entity("Plataforma.Educacao.Aluno.Domain.Entities.MatriculaCurso", b =>
                {
                    b.Navigation("Certificado");
                });
#pragma warning restore 612, 618
        }
    }
}
